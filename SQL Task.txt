Lesson 3:Queries with constraints (Pt. 2)

1.SELECT title FROM movies WHERE title LIKE "Toy Story%";
2.SELECT title FROM movies where director ="John Lasseter";
3.SELECT title FROM movies where director !="John Lasseter";
4.SELECT title FROM movies where title like "WALL-%";

Lesson 4: Filtering and sorting Query results

1.SELECT DISTINCT director FROM movies Order by director;
2.SELECT DISTINCT title FROM movies Order by year DESC LIMIT 4;
3.SELECT title FROM movies Order by title Limit 5;
4.SELECT title FROM movies Order by title limit 5 offset 5;

Review: Simple SELECT Queries

1.SELECT city, population FROM north_american_cities WHERE country = "Canada";
2.SELECT city, population FROM north_american_cities WHERE country = "United States" order by latitude DESC;
3.SELECT city FROM north_american_cities WHERE longitude < -87.629798 ORDER BY longitude;
4.SELECT city FROM north_american_citiesWHERE country = "Mexico" order by population DESC limit 2;
5.SELECT city FROM north_american_cities WHERE country = "United States" order by population DESC limit 2 offset 2;

Lesson 6: Multi-table queries with JOINs

1.SELECT title, domestic_sales, international_sales FROM movies INNER JOIN boxoffice ON movies.id = boxoffice.movie_id;
2.SELECT title, domestic_sales, international_sales FROM movies inner join boxoffice ON movies.id = boxoffice.movie_id WHERE international_sales > domestic_sales;
3.SELECT title, rating FROM movies inner join boxoffice ON movies.id = boxoffice.movie_id order by rating DESC;

Lesson 7: OUTER JOINs

1.SELECT distinct building FROM employees;
2.SELECT * FROM buildings;
3.SELECT DISTINCT building_name, role from buildings left join employees on building_name = employees.building;

